# docker-compose.yml
# Local + Prod via profiles. Use: 
#   Local: docker compose --profile local up -d
#   Prod:  docker compose --profile prod up -d
name: essosc-viewer

volumes:
  geoserver_data_dir:
  traefik_letsencrypt:

networks:
  backend: {}

services:
  traefik:
    image: traefik:v3
    command:
      - --providers.docker
      - --entrypoints.web.address=:80
    ports:
      - 80:80
    networks: [backend]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  geoserver:
    image: ${GEOSERVER_IMAGE}
    container_name: geoserver
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:8080/geoserver/web/ >/dev/null 2>&1 || exit 1']
      interval: 15s
      timeout: 5s
      retries: 20
    environment:
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - JAVA_OPTS=${GEOSERVER_JAVA_OPTS}
    volumes:
      - ./geoserver_data_dir:${GEOSERVER_DATA_DIR}
      - ./local_data:${GEOSERVER_LOCAL_DATA_DIR}:ro
    networks: [backend]
    labels:
      - traefik.enable=true
      - traefik.http.routers.geoserver.rule=Host(`localhost`) && PathPrefix(`/geoserver`)
      - traefik.http.routers.geoserver.entrypoints=web
      - traefik.http.services.geoserver.loadbalancer.server.port=8080

  geoserver-init:
    build:
      context: .
      dockerfile: Dockerfile.geoserver-init
    image: geoserver-init:latest
    container_name: geoserver-init
    depends_on:
      geoserver:
        condition: service_healthy
    networks: [backend]
    restart: 'no'
    volumes:
      - ./geoserver_register.py:/app/geoserver_register.py:ro
      - ./layers.yml:/app/layers.yml:ro
      - ./.env:/app/.env:ro
      - ./local_data:${GEOSERVER_LOCAL_DATA_DIR}:ro
    command: ['/app/layers.yml']

  viewer:
    build:
      context: .
      dockerfile: Dockerfile.viewer
    image: essosc-viewer:latest
    container_name: essosc-viewer
    restart: unless-stopped
    environment:
      - GEOSERVER_BASE_URL=/geoserver
      - LAYERS_YAML_PATH=/app/layers.yml
    volumes:
      - ./layers.yml:/app/layers.yml:ro
    networks: [backend]
    ports:
      - 5173:5173
