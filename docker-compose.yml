# docker-compose.yml
# Local + Prod via profiles. Use: 
#   Local: docker compose --profile local up -d
#   Prod:  docker compose --profile prod up -d
name: essosc-viewer

volumes:
  geoserver_data_dir:
  traefik_letsencrypt:

networks:
  internal:
  web: # shared with reverse proxy (prod)
    external: false

services:
  geoserver:
    image: ${GEOSERVER_IMAGE}
    container_name: geoserver
    restart: unless-stopped
    environment:
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - JAVA_OPTS=${GEOSERVER_JAVA_OPTS}
    volumes:
      - ./geoserver_data_dir:/opt/geoserver/data_dir
      - ./local_data:/opt/geoserver/local_data:ro
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost:8080/geoserver/web/']
      interval: 15s
      timeout: 5s
      retries: 20
    networks:
      - internal
      - web
    # expose directly only in local profile
    ports:
      - target: 8080
        published: ${GEOSERVER_LOCAL_PORT:-8080}
        protocol: tcp
        mode: host
    profiles: ['local', 'prod']
    labels:
      # Traefik routing (only active when traefik is running in prod)
      - 'traefik.enable=true'
      - 'traefik.http.routers.geoserver.rule=Host(`${GEOSERVER_HOST}`)'
      - 'traefik.http.routers.geoserver.entrypoints=websecure'
      - 'traefik.http.routers.geoserver.tls.certresolver=letsencrypt'
      - 'traefik.http.services.geoserver.loadbalancer.server.port=8080'

  # optional static proxy for local dev (e.g., pretty URL or CORS shim). Remove if not needed.
  # nginx:
  #   image: nginx:alpine
  #   depends_on: [geoserver]
  #   volumes:
  #     - ./ops/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #   ports:
  #     - '8081:80'
  #   networks: [internal]
  #   profiles: ['local']

  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.tlschallenge=true'
      - '--api.dashboard=${TRAEFIK_DASHBOARD}'
    ports:
      - '80:80'
      - '443:443'
      # enable if using dashboard: - '8088:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - web
    profiles: ['prod']
